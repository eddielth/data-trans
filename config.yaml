# MQTT配置
mqtt:
  broker: "tcp://localhost:1883"
  client_id: "data-trans-client"
  username: "user"
  password: "password"
  topics:
    - "devices/temperature/+"
    - "devices/humidity/+"
    - "devices/gateway/+"
# 日志配置
logger:
  level: "ERROR"       # 日志级别: DEBUG, INFO, WARN, ERROR
  file_path: "./logs/app.log"  # 日志文件路径
  max_size: 10        # 单个日志文件最大大小（MB）
  max_backups: 5      # 最大保留的日志文件数量
  console: true       # 是否同时输出到控制台
# 存储配置
storage:
  # 文件存储
  file:
    enabled: true
    path: "./data"
  # 数据库存储
  database:
    enabled: false
    type: "mysql"
    dsn: "user:password@tcp(localhost:3306)/data_trans"
# 转换器配置
transformers:
  # 温度传感器转换器
  temperature:
    script_path: "./scripts/temperature.js"
  
  # 湿度传感器转换器
  humidity:
    script_path: "./scripts/humidity.js"
  
  # 网关设备转换器
  gateway:
    script_code: |
      // 内联JavaScript转换脚本
      function transform(data) {
        log("处理网关数据: " + data);
        
        // 解析JSON数据
        var parsed = parseJSON(data);
        if (!parsed) return { error: "无效的JSON数据" };
        
        // 提取所有连接的设备信息
        var devices = [];
        if (parsed.connected_devices && Array.isArray(parsed.connected_devices)) {
          devices = parsed.connected_devices.map(function(dev) {
            return {
              id: dev.id || "unknown",
              type: dev.type || "unknown",
              status: dev.online ? "online" : "offline"
            };
          });
        }
        
        // 返回标准化数据
        return {
          gateway_id: parsed.gateway_id || parsed.id || "unknown",
          timestamp: parsed.timestamp || Date.now(),
          firmware_version: parsed.version || "unknown",
          devices: devices,
          raw: parsed
        };
      }